@charset "utf-8";

/* Declaring Raleway Font Import from Google Fonts. */
@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@100;200;300;400&display=swap');

/* Declare Root styles to allow for a consistent theme and font sizing throughout the document. THis also allows for easy adjustments to colour as the properties only need to be changed in the root to cascade throughout the entire document. */
:root {
    /* Color Palette Variables. */
    --primary-color: #c91d10;
    --white: #ffffff;
    --slate-black: #141414;
    --light-slate-black: #131212;
    --testimonial-light-grey: #f5f5f5;
    /* Font Family Variables. */
    --heading-font: "europa", sans-serif;
    --body-font: 'Raleway', sans-serif;
    /* Font Sizing Variables. */
    --font-xxs: 0.9rem;
    --font-xs: 1.2rem;
    --font-sm: 1.4rem;
    --font-md: 1.6rem;
    --font-lg: 1.8rem;
    --font-xlg: 2rem;
    --font-xxlg: 2.2rem;
    --hero-heading: 4rem;
    --primary-heading: 4.8rem;
    --sub-heading: 2.6rem;
    --secondary-heading: 3rem;
    /* Transition Variable. */
    --transition: all 0.3s ease-in-out;
  }

  /* Apply the border-box sizing to all elements and either before and after elements. */
  html,
  *, 
  ::after, ::before {
    box-sizing: border-box;
  }
  
  /* All elements will inherit the box-sizing set in the root html styles. */
  *::before, *::after, * {
    box-sizing: inherit;
    margin: 0;
    padding: 0;
  }
  
  html {
    line-height: 1.6;
    font-size: 100%;
    color: var(--slate-black);
  }


  /* For users that don't prefer animations or motion in the browser, disable the following style properties. */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }

    .hidden,
    .gallery-hidden {
      transition: none;
    }
  }

  /* Thank you to Fireship for this useful Scroll Animation. Here is the reference to the video tutorial https://www.youtube.com/watch?v=T33NN_pPeNI&t=13s */

  .hidden,
  .gallery-hidden {
    opacity: 0;
    filter: blur(5px);
  }

  .hidden {
    transform: translateX(-100%);
    transition: all 1s;
  }

  .gallery-hidden {
    transform: translateY(50%);
    transition: all 0.9s;
  }

  .slide-animation {
    opacity: 1;
    filter: blur(0);
    transform: translateX(0);
  }

  /* End of Fireship Styles Attrition */

  /* Scrollbar styles. */
	body::-webkit-scrollbar {
	width: 7px; 
	}

	/* Scrollbar track styles. */
	body::-webkit-scrollbar-track {
	background: var(--slate-black); 
	}

  /* Scrollbar thumb styles. */
	body::-webkit-scrollbar-thumb {
	background-color: var(--primary-color); 
	border-radius: 25px;
	height: 2rem;
	}

	/* Using the selection pseudo class on all DOM elements to change the highlighted text background and text colour. */
	*::selection {
	background-color: var(--primary-color);
	color: #f1f1f1;
	}
  
  /* Remove the default padding and margins on all heading elements */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    padding: 0;
    margin: 0;
    /* Overwrite line-height for headings */
    line-height: 1.2;
    /* Assign the heading font variable to all headings. */
    font-family: var(--heading-font);
  }
  
  /* Global paragraph styles. */
  p {
    font-family: var(--body-font);
    font-weight: 500;
    font-style: normal;
    font-size: 1.2rem;
    line-height: 1.6;
    transition: var(--transition);
  }
  
  /* Global anchor styles. */
  a {
    text-decoration: none;
  }
  
  /* Global list styles. */
  ul, li {
    padding: 0;
    margin: 0;
  }

  li {
    list-style: none;
  }
  
  /* Header styles. */
  header {
    width: 100%;
    filter: none;
    z-index: 99;
    transition: var(--transition);
    position: fixed;
    background-color: var(--white);
  }
  
  /* Nav anchor styles, font family, size, weight, and some letter spacing. */
  nav ul li a {
    color: var(--white);
    font-family: var(--body-font);
    font-style: normal;
    letter-spacing: 0.05rem;
  }
  
  /* nav-link styles */
  header .nav-link {
    font-size: 1rem;
    font-weight: 600;
    color: var(--slate-black);
    transition: var(--transition);
  }
  
  /*  */
  header .nav-link:hover {
    color: var(--primary-color);
  }
  
  /* Set the links to the primary gold color when hovered over or once a link becomes active. */
  nav ul li a:hover,
  .navbar-dark .navbar-nav .nav-link.active {
    color: var(--primary-color);
  }

  
  /* Background and white space styles of the navbar bootstrap component */
  .navbar {
      background-color: transparent;
      padding: 1rem 0;
      max-width: 1800px;
      margin: 0 auto;
  }
  
  /* Add spacing between each navbar item. */
  .nav-item {
      padding: 0 0.75rem;
  }
  
  /* Header and footer logo anchor styles. */
  .logo {
    transition: var(--transition);
  }

  .logo:hover {
    transform: scale(1.05) rotate(2deg);

  }

  /* Set the canvas width to be minimum 75 vertical width of the viewport at all times regardless of screen size, this is to allow users to click off the menu to close it. It can only be a maximum of 600 pixels wide. */
  @media screen and (max-width: 1200px){
    .offcanvas {
      max-width: min(75vw, 600px)!important;
    }
  
    /* Remove the default canvas border when toggled out from the side. */
    div .offcanvas.offcanvas-end {
      border-left: none;
    }
  }


  [data-bs-theme=light] .navbar-toggler-icon {
    background-image: url(../images/hamburger.svg);
  }

  /* Override bootsrap navbar-toggler button styles. */
  div .navbar-toggler {
      outline: none;
      /* Apply custom size to the hamburger menu */
      font-size: 1.75rem;
      border: none;
      box-shadow: none;
      padding: 0.5rem;
  }
  
  /* Remove the default box shadow when the toggler button is in the focused state. */
  div .navbar-toggler:focus {
      box-shadow: none;
  }
  
  /* Center the navbar element contents. */
  .navbar > .container-fluid {
    justify-content: center;
  }
  
  #navbarNav > div {
    justify-content: space-between;
    align-items: center;
    align-content: center;
    padding: 0.5rem 3rem;
  }

  nav .navbar-brand {
    margin-right: 0;
  }

  /* Navigation Bar Media Query */
  @media screen and (max-width: 1200px) {
  
      .navbar-nav {
          justify-content: center;
          align-items: center;
          text-align: center;
      }
  
      /* At width of 1200px of the viewport, the container elements will shift back to the left using space between */
      .navbar > .container-fluid {
          justify-content: space-between;
      }
  
      /* Remove the navbar background at smaller device widths, creates a more clean design as I don't have a navigation logo. */
      .navbar {
        background-image: none;
      }
  
      /* White space on the top and bottom of the navigation item elements. */
      .nav-item {
          margin: 1rem 0;
      }
  
      /* Set the background color of the slide out canvas body at smaller screen widths. */
      .offcanvas-body {
          background-color: var(--white);          
      }

      #navbarNav > div {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-content: center;
      }

      .logo {
        display: flex;
        margin: 0 auto 2rem auto;
        
      }
  }
  
/* Start of Hero Styles */

section {
  padding: 0 1rem;
  margin: 0 auto;
}

/* The primary hero section container. */
#hero {
  display: grid;
  max-width: 100%;
  /* Setting up the grid, creating 13 equal columns with 1 fractional unit. */
  grid-template-columns: repeat(13, 1fr);
  /* Center all content and items elements. */
  justify-content: center;
  align-content: center;
  align-items: center;
  min-height: 100vh;
  padding: 15rem 0 8rem 0;
}


#hero > article {
  /* Positioned in the 3rd column spanning to the 12th column, staying in the first row. */
  grid-area: 1 / 3 / 1 / 12;
  z-index: 2;
}

/* Hero image container.  */
#hero > figure {
  /* Start at the 8th column, ending at the 14th column, first row */
  grid-area: 1 / 8 / 1 / 14;
  z-index: 1;
}

/* Hero image styles. */
#hero > figure img {
  max-width: 100%;
  /* Cover the container space whenever available. */
  object-fit: cover;
}

#hero > article h1,
#gallery > section h1
 {
  color: var(--primary-color);
  /* Dynamically adjust the heading font based on the viewport width using the clamp function. */
  font-size: clamp(var(--sub-heading), 5vw, var(--primary-heading));
  font-family: var(--heading-font);
  font-weight: 700;
  font-style: normal;
  letter-spacing: 0.10rem;
  text-transform: uppercase;
}

/* Hero and get started paragraph styles. */
#hero > article p,
#get-started > article p {
  max-width: 660px;
  margin: 2rem 0;
  line-height: 1.8;
  hyphens: auto;
  font-weight: 400;
}

/* Anchor styles for the hero, get-started and contact sections. */
#hero > article a,
#get-started > article a,
#contact button,
.intro-wrapper a  {
  display: inline-block;
  /* Colour properties. */
  background-color: white;
  color: var(--light-slate-black);
  box-shadow: 6px 6px 0 0 var(--primary-color);
  outline: 0.15rem solid var(--light-slate-black);
  text-decoration: none;
  /* Spacing properties. */
  padding: 0.8rem 2rem;
  letter-spacing: 0.1rem;
  margin-top: 1rem;
  /* Font properties. */
  font-size: var(--font-xxs);
  text-transform: uppercase;
  font-family: var(--body-font);
  text-align: center;
  font-weight: 600;
  font-style: normal;
  /* Setting up a transition on the anchors for the hover later on. */
  transition: var(--transition);
  /* Adding a minimum width for each anchor element. */
  min-width: 180px;
}

/* Anchor hover styles. */
#hero > article a:hover,
#get-started > article a:hover,
#contact button:hover {
  transform: translateY(0.2rem);
  background-color: var(--primary-color);
  color: var(--white);
  box-shadow: 6px 6px 0 0 var(--white);
}

/* At device widths of 1500px wide, add a filter to the hero and get-started images to reduce the opacity to to account for text visibility.  */
@media screen and (max-width: 1500px){
  .image-wrapper {
    filter: opacity(0.25);
  }
}

/* End of Hero Styles */


/* About wrapper styles. */
.about-wrapper {
  display: grid;
  /* Align all content in the grid. */
  justify-content: center;
  align-items: center;
  align-content: center;
  background-color: var(--light-slate-black);
  max-height: 80vh;
}

/* About and Features container styles. */
#about, #features {
  display: grid;
  /* Setting a max width and centering the container elements with margin auto. */
  max-width: 1366px;
  margin: 0 auto;
  /* Minimum height on the container elements. */
  min-height: 100vh;
  text-align: center;
  padding: 10rem 1rem;
}

/* Primary sub-heading styles. */
#about h2, #features h2, #benefits h2, #testimonials h2 {
  /* Dynamically adjust the font size of the h2 elements based on the width of the viewport. */
  font-size: clamp(var(--font-xlg), 5vw, var(--secondary-heading));
  color: var(--primary-color);
  text-transform: uppercase;
  font-weight: 700;
  margin-bottom: 2rem;
}

/* About container styles. */
#about {
  min-height: 60vh;
  max-width: 100%;
  justify-content: center;
  padding: 10rem 0;
}

#about h2 {
  text-align: center;
  margin: 2rem auto;
}

/* About section skewed transform container styles. */
.skewed {
  width: 100%;
  color: var(--white);
  display: flex;
  background-color: var(--light-slate-black);
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  z-index: 1;
  justify-content: center;
  align-items: center;
  border-radius: 0.25rem;
}

/* About section text styles. */
.about-text {
  padding: 1.5em;
  width: 60%;
  display: flex;
  justify-content: center;
  align-items: start;
  flex-direction: column;
}

.about-text > p {
  padding: 1rem 5rem;
}

/* At screen widths of 1200px, apply the following styles to the about section elements. */
@media screen and (max-width: 1200px) {

  /* White space on the about container and paragraph text. */
  #about {
    padding: 10rem 0;
  }

  .about-text > p {
    padding: 1rem;
  }

  /* When the device width is a max-width of 768px, the about text will align left. */
  @media screen and (max-width: 768px) {
    .about-text > p {
      text-align: left;
      hyphens: auto;
    }
  }
  
}

/* About image styles. */
.about-image {
  /* Width and height to occupy half the container width. */
  width: 50%;
  height: 48em;
  /* Positioning the image relative to the container. */
  position: relative;
  /* Hide any image overflowing by setting the overflow property to hidden. */
  overflow: hidden; 
  /* Thanks to the Official Automoblox Facebook Page for the Image, Reference Here: https://www.facebook.com/Automoblox/photos/pb.100063942187834.-2207520000/10152800348633622/?type=3 */
  background-image: url('../images/about-images/about-image.jpg');
  /* Background properties. */
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  border-bottom-left-radius: 0.25rem;
  border-top-left-radius: 0.25rem;
  /* Adding a filter to image to make it grayscale. */
  filter: grayscale(100%);
}

/* About image before and after styles. */
.about-image::before,
.about-image::after {
  /* Positioning the skewed background shapes absolutely to the parent. */
  content: '';
  position: absolute;
  top: 50%;
  background-color: var(--light-slate-black);
  /* Width and height of the shapes. */
  width: 20%;
  height: 140%;
}


/* Rotate the before and after shapes using transforms. */
.skewed-left .about-image::before {
  transform: translateY(-50%) rotate(-15deg);
  left: initial;
  right: -7.1em;
}

.about-image::after {
  right: -7.1em;
  transform: translateY(-50%) rotate(15deg);
}

/* About image width */
.img {
  width: 140%;
}

/* About button styles. */
.about-btn {
  /* Display in-block and center the anchor with auto margins. */
  display: inline-block;
  max-width: 100px;
  margin: 1rem auto;
}

/* About anchor button svg styles. */
.about-btn svg {
  stroke: var(--primary-color);
  /* Setting up a transition on the svg for a smooth hover effect. */
  transition: var(--transition);
}

.about-btn:hover svg {
  stroke: var(--white);
}

/* At screen widths of a max-width of 1200px, the container will display as flex and transform into a stacked column layout with the transformed shapes. */
@media screen and (max-width: 1200px) {

  /* Change the default flex direction row to column layout. */
  .skewed {
    flex-direction: column;
  }

  /* The text and image will now occupy 100% width of their columns */
  .about-text, .about-image {
    width: 100%;
  }

  /* Change the order of the image and about text in the flex container. */
  .about-image {
    height: 20em;
    order: 2;
  }

  .about-text {
    order: 1;
    padding: 3rem 2rem;
  }

  /* Remove the transform shapes. */
  .skewed .about-image::after,
  .skewed .about-image::before {
    display: none;
  }
  
}

/* Feature section container styles. */
#features {
  /* Max width and padding. */
  max-width: 1466px;
  padding: 0 5rem 12rem 5rem;
  /* Display grid and create 12 equal columns. */
  display: grid; 
  grid-template-columns: repeat(12, 1fr); 
  grid-template-rows: auto;
  /* Grid item spacing. */
  gap: 2rem; 
  /* Center all grid content. */
  justify-content: center;
  align-items: center;
  align-content: center;
}

/* Start of features article styles. */
#features article {
  box-shadow: rgba(149, 157, 165, 0.1) 0px 8px 24px;
  color: var(--white);
  padding: 2rem;
  border-radius: 0.25rem;
}


/* Features heading styles. */
#features article h3 {
  transition: var(--transition);
  font-size: clamp(var(--font-lg), 5vw, 2rem);
  margin: 1rem 0;
}

/* Features text styles. */
#features > p {
  max-width: 1000px;
  margin: 0 auto;

}

#features article h3,
#features article p {
  color: var(--light-slate-black);
}

#features article p {
  padding: 0 1rem;
  min-height: 10rem;
}


/* Feature container children element grid styles. */

/* Intro heading and paragraph */
.features-intro-content {
  /* Row 1 to 2, Column 1 to 9 */
  grid-area: 1 / 1 / 2 / 9;
}

/* Card 1 */
#features > article:nth-of-type(1) {
  /* Row 1 to 2, Column 9 to 13 */
  grid-area: 1 / 9 / 2 / 13;
}

/* Card 2 */
#features > article:nth-of-type(2) {
  /* Row 2 to 3, Column 1 to 5 */
  grid-area: 2 / 1 / 3 / 5;
}

/* Card 3 */
#features > article:nth-of-type(3) {
  /* Row 2 to 3, Column 5 to 9 */
  grid-area: 2 / 5 / 3 / 9;
}

/* Card 4 */
#features > article:nth-of-type(4) {
  /* Row 2 to 3, Column 9 to 13 */
  grid-area: 2 / 9 / 3 / 13;
}

/* At max device width of 1200px, apply the following styles to the features section. */
@media screen and (max-width: 1200px) {
  
  /* Adjust the width and white space of the features container. */
  #features {
    max-width: 1200px;
    padding: 0 2rem 12rem 2rem;
    gap: 1rem 2rem;
  }

  /* Adjust the width of the features articles, apply a max width and centering with auto margins. */
  #features article {
    max-width: 800px;
    margin: 2rem auto 1rem auto;
  }

  /* Features paragraph styles */
  #features p {
    margin-bottom: 1rem;
  }

  #features div > p {
    padding: 0 1rem;
  }

  /* Article paragraphs styles, adjust the max-width of the paragraph elements and center with auto margins. */
  #features article p {
    max-width: 500px;
    margin: 0 auto;
    min-height: 0;
  }

  .features-intro-content {
    /* Row 1 to 2, Coloumn 1 to 13 */
    grid-area: 1 / 1 / 2 / 13;
  }
  
  /* Card 1 */
  #features > article:nth-of-type(1) {
    /* Row 2 to 3, Coloumn 1 to 7 */
    grid-area: 2 / 1 / 3 / 7;
  }
  
  /* Card 2 */
  #features > article:nth-of-type(2) {
    /* Row 2 to 3, Coloumn 7 to 13 */
    grid-area: 2 / 7 / 3 / 13;
  }
  
  /* Card 3 */
  #features > article:nth-of-type(3) {
    /* Row 3 to 4, Coloumn 1 to 7 */
    grid-area: 3 / 1 / 4 / 7;
  }
  
  /* Card 4 */
  #features > article:nth-of-type(4) {
    /* Row 3 to 4, Coloumn 7 to 13 */
    grid-area: 3 / 7 / 4 / 13;
  }
  
}

/* At Device widths of 768px, the features section will display as flex and stack in a column layout, remove the article padding and box shadow. */
@media screen and (max-width: 768px) {

  #features {
    display: flex;
    flex-direction: column;
    padding: 0 1rem 12rem 1rem;
  }


  #features article {
    box-shadow: none;
    padding: 0;
  }

}

/* End of features article styles. */

/* Start of Benefits Styles */

/* Benefits wrapper container styles */
.benefits-wrapper {
  max-width: 100%;
  min-height: 100vh;
  background-color: var(--light-slate-black);
  /* Display grid and center all benefit wrapper content. */
  display: grid;
  justify-content: center;
  align-items: center;
  /* Position the benefits wrapper relative to allow for control when positioning children elements. */
  position: relative;
}


/* Benefits wrapper before and after shapes. Two rectangles on a 7 degree angle to form a triangle separator over the parent container. */
.benefits-wrapper::before {
  position: absolute;
  content: '';
  width: 51%;
  height: 208px;
  left: 0;
  bottom: -5rem;
  background-color: var(--white);
  transform: skewY(7deg);
}

.benefits-wrapper::after {
  position: absolute;
  content: '';
  width: 51%;
  height: 208px;
  right: 0;
  bottom: -5rem;
  background-color: var(--white);
  transform: skewY(-7deg);
}

/* Benefits container styles */
#benefits {
  /* Max width of the container and centering with auto margins. */
  max-width: 1466px;
  margin: 0 auto;
  min-height: 100vh;
  text-align: center;
  /* White space */
  padding: 10rem 1rem;
  text-align: left;
  color: var(--white);
}

/* Benefits text centering. */
#benefits h2,
#testimonials h2 {
  text-align: center;
}

#benefits > p {
  margin: 2rem 0;
  hyphens: auto;
}

/* Benefits cards container styles. */
#benefit-cards-container {
  /* Display grid and create 3 equal columns. */
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  /* Grid item spacing. */
  gap: 2rem;
  margin: 5rem 0;
  padding: 0 3rem 5rem 3rem;
  text-align: center;
}

/* Benefit card styles. */
#benefit-cards-container article {
  padding: 2rem;
  border-radius: 0.25rem;  
  transition: var(--transition);
}

/* Removing the hover transition effect of the card paragraphs for readability. */
#benefit-cards-container article p {
  transition: none;
}

/* Benefit card SVG styles. */
#benefit-cards-container article > svg {
/* Add top and bottom margins to divide the card content and set up a transition for hover effects later. */
 margin: 2rem 0;
 transition: var(--transition);
}

/* At device max-width of 1200px, place all benefit card elements in a single column layout. */
@media screen and (max-width: 1200px) {

  #benefit-cards-container {
    grid-template-columns: 1fr;
    max-width: 800px;
    /* White space and centering the cards container with auto margins. */
    margin: 0 auto;
    padding: 0 1rem 5rem 1rem;
  }

  /* Adjusting max card width, centering the elements, and adjusting white space. */
  #benefit-cards-container article {
    max-width: 500px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

}

/* At max device width of 580px, reduce the benefit container and benefit cards padding. */
@media screen and (max-width: 580px) {

  #benefit-cards-container {
    padding: 0 0 5rem 0;
  }
  
  #benefit-cards-container article {
    padding: 2rem 0.5rem;
  }

}

/* Benefit card hover styles. */
#benefit-cards-container article:hover {
  background-color: var(--white);
  color: var(--light-slate-black);
  transform: translateY(-0.2rem);
}

/* If the cards are hovered, the SVG icon will rotate. */
#benefit-cards-container article:hover svg {
  transform: rotate(360deg);
}

/* End of Benefits Styles. */


/* Start of Testimonials Styles */

/* Testimonial container styles. */
#testimonials {
  max-width: 1466px;
  margin: 0 auto;
  min-height: 100vh;
  padding: 10rem 1rem;
}

/* Testimonial h2 styles. */
#testimonials h2 {
  margin-bottom: 4rem;
}

/* Testimonial grid container. */
.testimonial-card-container {
  display: grid;
  /* Create 6 equal columns */
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(auto, 1fr);
  /* Card spacing. */
  gap: 1.5rem;
  align-content: center;
}

/* Testimonial card styles. */
.testimonial-card-container article {
  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
  background-color: #fafafa;
  padding: 2rem 3rem;
  /* Display the children elements of the grid container as flex to allow more control over positioning. */
  display: flex;
  /* The elements will stack on top of each other. */
  flex-direction: column;
  border-radius: 1rem;
  transition: var(--transition);
}

/* Add a box shadow on card hover. */
.testimonial-card-container article:hover {
  box-shadow: rgba(149, 157, 165, 0.4) 0px 8px 24px;
}

/* First Testimonial Card */
.testimonial-card-container > article:nth-of-type(1) {
  /* Row 1 to 1, Column 1 to 5. */
  grid-area: 1 / 1 / 1 / 5;
  background-color: var(--testimonial-light-grey);
}

/* Second Testimonial Card */
.testimonial-card-container > article:nth-of-type(2) {
   /* Row 1 to 3, Column 5 to 7. */
  grid-area: 1 / 5 / 3 / 7;
  /* Thank you to Vecteezy for the Quotation Mark Vector Graphic, reference here: https://www.vecteezy.com/vector-art/105173-free-quotation-mark-vector */
  background-image: url(../images/testimonial-images/testimonial-quote-mark-white.svg);
  background-color: var(--light-slate-black);
  color: var(--white);
  /* Positioning the quotation background at the bottom right of the card, and negate repeating images. */
  background-repeat: no-repeat;
  background-position: bottom right;
  background-size: 50%;
}

/* Third Testimonial Card */
.testimonial-card-container > article:nth-of-type(3) {
  /* Row 2 to 2, Column 1 to 3. */
  grid-area: 2 / 1 / 2 / 3;
  background-color: var(--light-slate-black);
  color: var(--white);
}

/* Fourth Testimonial Card */
.testimonial-card-container > article:nth-of-type(4) {
  /* Row 2 to 2, Column 3 to 5. */
  grid-area: 2 / 3 / 2 / 5;
}

/* Fifth Testimonial Card */
.testimonial-card-container > article:nth-of-type(5) {
  /* Row 3 to 3, Column 1 to 4. */
  grid-area: 3 / 1 / 3 / 4;
}

/* Sixth Testimonial Card */
.testimonial-card-container > article:nth-of-type(6) {
  /* Row 3 to 3, Column 4 to 7. */
  grid-area: 3 / 4 / 3 / 7;
  background-color: var(--testimonial-light-grey);
}

/* At device widths of 1200px, apply the following styles to the testimonial section grid layout to alter the card columns and rows to adapt to smaller screens. */
@media screen and (max-width: 1200px) {

  .testimonial-card-container article {
    padding: 2rem 2rem;
  }

  /* Testimonial Card 1 */
  .testimonial-card-container > article:nth-of-type(1) {
    /* Row 1 to 1, Column 1 / 4 */
    grid-area: 1 / 1 / 1 / 4;
  }

   /* Testimonial Card 2 */
  .testimonial-card-container > article:nth-of-type(2) {
    /* Row 1 to 1, Column 4 / 7 */
    grid-area: 1 / 4 / 1 / 7;
  }

   /* Testimonial Card 3 */
  .testimonial-card-container > article:nth-of-type(3) {
    /* Row 2 to 2, Column 1 / 4 */
    grid-area: 2 / 1 / 2 / 7;
  }

   /* Testimonial Card 4 */
  .testimonial-card-container > article:nth-of-type(4) {
    /* Row 3 to 3, Column 1 / 4 */
    grid-area: 3 / 1 / 3 / 4;
  }

   /* Testimonial Card 5 */
  .testimonial-card-container > article:nth-of-type(5) {
    /* Row 3 to 3, Column 4 / 7 */
    grid-area: 3 / 4 / 3 / 7;
  }

  /* Testimonial Card 6 */
  .testimonial-card-container > article:nth-of-type(6) {
    /* Row 4 to 4, Column 1 / 4 */
    grid-area: 4 / 1 / 4 / 7;    
  }
  
}
/* On mobile device widths of 768px max width, apply the following stlyes. */
@media screen and (max-width: 768px) {

  /* Change the cards that don't have a white background to white on smaller screens to stay consistent. */
  .testimonial-card-container > article:nth-of-type(1),
  .testimonial-card-container > article:nth-of-type(2),
  .testimonial-card-container > article:nth-of-type(3), 
  .testimonial-card-container > article:nth-of-type(6) {
    background-color: var(--white);
    color: var(--light-slate-black);
  }
  
  /* All cards will span across the entire column track, form a single column layout. */
  .testimonial-card-container > article:nth-of-type(1),
  .testimonial-card-container > article:nth-of-type(2),
  .testimonial-card-container > article:nth-of-type(3),
  .testimonial-card-container > article:nth-of-type(4),
  .testimonial-card-container > article:nth-of-type(5),
  .testimonial-card-container > article:nth-of-type(6) {
    grid-column: 1 / 7;
  }

  /* Card 1, Row 1 */
  .testimonial-card-container > article:nth-of-type(1) {
    grid-row: 1 / 1;
  }

  /* Card 2, Row 2 */
  .testimonial-card-container > article:nth-of-type(2) {
    grid-row: 2 / 2;
  }

  /* Card 3, Row 3 */
  .testimonial-card-container > article:nth-of-type(3) {
    grid-row: 3 / 3;
  }

  /* Card 4, Row 4 */
  .testimonial-card-container > article:nth-of-type(4) {
    grid-row: 4 / 4;
  }

  /* Card 5, Row 5 */
  .testimonial-card-container > article:nth-of-type(5) {
    grid-row: 5 / 5;
  }

  /* Card 6, Row 6 */
  .testimonial-card-container > article:nth-of-type(6) {
    grid-row: 6 / 6;
  }

}

/* Testimonial header styles, the testimonial image and heading will sit side by side due to the flex container. */
.testimonial-header {
  display: flex;
  align-content: center;
  align-items: center;
  gap: 0 1rem;
  margin-bottom: 1rem;
}

/* On mobile devices of max width 768px wide, apply the following styles. */
@media screen and (max-width: 768px) {

  /* Stack the testimonial heading and image in a column layout to prevent overflow on smaller screens. */
  .testimonial-header {
    flex-direction: column;
    margin-bottom: 0;
  }
  
  /* Edit the order of the image in the testimonial header container. */
  .testimonial-header img {
    order: 2;
    margin: 1rem 0;
  }

  .testimonial-card-container article blockquote {
    text-align: center;
  }

}

/* Testimonial h3 styles. */
.testimonial-header h3 {
  color: var(--primary-color);
}

/* Testimonial image styles. */
.testimonial-header img {
  /* Fixed width on the portrait images. */
  width: 60px;
  height: 60px;
  /* Round the images intro circles. */
  -webkit-border-radius: 60px;
  -webkit-background-clip: padding-box;
  -moz-border-radius: 60px;
  -moz-background-clip: padding;
  border-radius: 60px;
  background-clip: padding-box;
  /* Center the images into the image container. */
  background-size: cover;
  background-position: center center;
  /* Grayscale the portrait images to keep consistent theme. */
  filter: grayscale(100%);
}

/* Auto hypens on the blockquote elements. */
.testimonial-card-container article blockquote {
  hyphens: auto;
}

/* Display block on the cite element to allow more control. */
.testimonial-card-container article blockquote cite {
  display: block;
  margin-top: 1rem;
  color: var(--primary-color);
}

/* Adjust the quote font to dynamically adjust based on the device viewport width. */
.testimonial-card-container article blockquote q {
  font-size: clamp(1rem, 5vw, var(--font-xs));
  line-height: 1.5;
}


#get-started {
  display: grid;
  max-width: 100%;
  /* Setting up the grid, creating 12 equal columns with 1 fractional unit. */
  grid-template-columns: repeat(12, 1fr);
  /* Center all grid content */
  justify-content: center;
  align-content: center;
  align-items: center;
  min-height: 80vh;
  /* container white space. */
  padding: 0 0 8rem 0;
}

#get-started > article {
  /* Row 1 to 1, Column 7 to 11 */
  grid-area: 1 / 7 / 1 / 11;
  /* Make sure the content overlaps the image by setting the z-index to a higher value in the stack order. */
  z-index: 2;
  color: var(--white);
}

/*Get started image grid item styles */
#get-started > figure {
  /* Row 1 to 1, Column 2 to 7 */
  grid-area: 1 / 2 / 1 / 7;
  z-index: 1;
  margin-right: 5rem;
}

/* Get started image styles. */
#get-started > figure img {
  max-width: 100%;
  object-fit: cover;
}

/* Get started text styles. */
#get-started > article p {
  margin: 2rem auto;
  color: var(--light-slate-black);
}

#get-started article > h2 {
  color: var(--primary-color);
  /* Dynamically adjust the heading font based on the width of the viewport. */
  font-size: clamp(var(--font-lg), 5vw, var(--secondary-heading));
  text-transform: uppercase;
  font-weight: 700;
  margin-bottom: 2rem;
}

/* At a max device width of 1200px, apply the following styles. */
@media screen and (max-width: 1200px) {

  /* Add some slight padding on the left and right container edges on smaller screens.  */
  section {
    padding: 0 1rem;
  }

  /* Convert the hero and get started grid containers to a single column layout. */
  #hero, #get-started {
    grid-template-columns: 1fr;
    text-align: center;
    padding: 10rem 1rem 3rem 1rem;
  }

  #get-started {
    padding: 0;
  }

  /* Center text contents of the hero and get started sections. */
  #hero > article h2,
  #hero > article p,
  #get-started > article h2,
  #get-started > article p {
    text-align: center;
  }

  #hero > article p {
    margin: 1.5rem auto;
  }

  /* At max device width of 768px, apply to following styles. */
  @media screen and (max-width: 768px){

    /* Paragraph and quote elements font will scale down on mobile. */
    p, .testimonial-card-container article blockquote q  {
      font-size: 1.05em;
    }

    /* Adjust paragraph margins of the hero and get started sections on mobile. */
    #hero > article p,
    #get-started > article p {
      margin: 2.5rem auto;
      padding: 0 1rem;
    }  

  }

  /* Place each of the grid items in the same row and column tracks to allow overlapping elements. */
  #hero > article,
  #get-started > article {
    grid-area: 1 / 1 / 1 / 8;
    padding-bottom: 6rem;
  }

  #hero > figure,
  #get-started > figure {
    grid-area: 1 / 1 / 1 / 8;
  }

  #get-started > figure {
    margin-right: 0;
  }

}

/* Display the footer as flex to align all the items in the center. */
footer {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0 auto;
  padding: 2rem 0;
}

/* Display the navbar as a row to display the logo and links side by each. */
footer nav .navbar-nav {
  display: flex;
  flex-direction: row;
  justify-content: center;
  margin: 1rem 0 1rem 5rem;
  padding: 0;
}

/* Footer navigation link font styles. */
footer .nav-link {
  margin: 1rem;
  font-family: var(--body-font);
  font-size: var(--font-xxs);
  transition: var(--transition);
  font-weight: 600;
}

footer .nav-link:hover {
  color: var(--primary-color);
}

/* If the viewport is a max width of 1200px, apply the following styles. */
@media screen and (max-width: 1200px) {

  /* Change the flex direction of the footer contents into a column layout allowing stacking. */
  footer {
    flex-direction: column;
    padding: 3rem 0;
  }

  footer nav .navbar-nav {
    margin: 2rem 0 0 0;
  }

  footer .nav-link {
    margin: 0 1rem;
    padding: 0;
  }

}

/* Stack the footer links in a column layout on smaller screens. */
@media screen and (max-width: 768px) {

  footer nav .navbar-nav {
    flex-direction: column;
  }
  
}

/* Gallery container styles. */
#gallery {
  /* Max container width and minimum height. */
  max-width: 1366px;
  min-height: 100vh;
  margin: 0 auto;
  /* Container white space. */
  padding: 20rem 1rem 0 1rem;
  text-align: left;
 
}

/* Add white space between the intro gallery sections and car gallery. */
#gallery > section {
  text-align: center;
  margin-bottom: 6rem;
}

/* Gallery heading styles. */
#gallery > section h1 {
  /* Dynamically adjust the font size based on the width of the viewport. */
  font-size: clamp(var(--font-xxlg), 5vw, 4rem);
  /* Add white space below the heading element. */
  margin-bottom: 2rem;
  color: var(--light-slate-black);
}

/* Car gallery intro wrapper container styles.  */
.intro-wrapper {
  display: grid;
  /* Create 12 equal columns */
  grid-template-columns: repeat(12, 1fr);
  padding-bottom: 2rem;
}

/* Car gallery heading styles. */
.intro-wrapper h2 {
  /* Dynamically adjust the font size based on the width of the viewport. */
  font-size: clamp(var(--font-xlg), 5vw, var(--secondary-heading));
  margin-bottom: 1rem;
}

/* Position the intro grid content, Row 1 to 1, Column 1 to 7 */
.intro-wrapper > article {
  grid-area: 1 / 1 / 1 / 7;
}

/* Position the car image to the right of the grid. */
.intro-wrapper figure {
    margin: 1rem auto;
    max-width: 1000px;
    /* Row 1 to 1, Column 7 to 13. */
    grid-area: 1 / 7 / 1 / 13;
}

/* Increase the car image width. */
.intro-wrapper figure img {
  width: 110%;
}

/* Car cart button styles. */
.cart-btn-container {
  /* Display the add to cart button and price side by side with flex. */
  display: flex;
  /* Align the items. */
  align-items: center;
  /* Max container width. */
  max-width: 300px;
  margin-top: 2rem;
  gap: 5rem;
}

/* Car gallery price paragraph styles. */
.cart-btn-container p {
  margin: 0;
  font-size: 1.5rem;
  font-family: var(--body-font);
  font-weight: 600;
  font-style: normal;
}

/* Car details wrapper grid container. */
.car-details-wrapper {
  display: grid;
  /* Three equal column grid */
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(auto, 1fr);
  /* White space between grid items. */
  gap: 5rem;
  /* Center grid container contents. */
  align-content: center;
  align-items: center;
  justify-content: center;
  margin-top: 1rem;
}

/* Detail card height must be a minimum of 25rem, to stay consistent regardless of the amount of content in the card. */
.car-details-wrapper article {
  min-height: 25rem;
}

/* Max width of the car details unordered list contents */
.car-details-wrapper ul {
  max-width: 600px;
  margin: 0 auto;
}

/* Car details list item styles. */
.car-details-wrapper ul li {
  font-size: 1.2rem;
  font-family: var(--body-font);
  margin-bottom: 1rem;
}

/* Top and bottom spacing of the car details SVGs, diving up the grid content for readability. */
.car-details-wrapper svg {
  margin: 1rem 0;
}

/* Gallery car container padding. */
.car-container {
  padding: 5rem 2rem;
}

/* Car details SVG styles. */
.lucide-scroll-text, 
.lucide-paintbrush, 
.lucide-bar-chart {
  /* Fixed width and height, to stay consistent. */
  width: 40px;
  height: 40px;
  /* SVG stroke colour */
  stroke: var(--primary-color);
}

/* At device widths of 1200px, apply the following styles. */
@media screen and (max-width: 1200px) {

  .car-details-wrapper ul {
    margin: 0 auto;
  }

  /* The car gallery intro content will stack into a flex column layout. */
  .intro-wrapper {
    display: flex;
    flex-direction: column;
    gap: 3rem;
  }

  /* Reduce the gallery image width from 110% to 100% to prevent overflow. */
  .intro-wrapper figure img {
    width: 100%;
  }

  /* Remove the min height to prevent spacing issues on smaller screens. */
  .car-details-wrapper article {
    min-height: 0;
    text-align: center;
  }

  /* Adjust the min height of the first and second detail cards to keep consistent alignment. */
  .car-details-wrapper article:nth-of-type(1),
  .car-details-wrapper article:nth-of-type(2) {
    min-height: 20rem;
  }

  /* Car Details Card 1 */
  .car-details-wrapper article:nth-of-type(1) {
    /* Row 1 to 2, Column 2 to 6 */
    grid-area: 1 / 1 / 2 / 6;
  }

  /* Car Details Card 2 */
  .car-details-wrapper article:nth-of-type(2) {
    /* Row 1 to 2, Column 6 to 12 */
    grid-area: 1 / 6 / 2 / 12;
  }

  /* Car Details Card 3 */
  .car-details-wrapper article:nth-of-type(3) {
    /* Row 2 to 3, Column 1 to 12 */
    grid-area: 2 / 1 / 3 / 12;
  }

}

/* At device widths of 820px, apply the following styles. */
@media screen and (max-width: 820px) {

  /* Adjust list item font size for mobile screens to match the paragraph font sizing. */
  .car-details-wrapper ul li {
    font-size: 1.05em;
  }

  /* Align intro wrapper text. */
  .intro-wrapper {
    text-align: center;
  }

  /* Card details wrapper, stack the content on mobile by setting the display as flex and flex direction to column */
  .car-details-wrapper {
    display: flex;
    flex-direction: column;
    /* Detail card spacing */
    gap: 3rem;
  }

  /* Remove min height to prevent spacing issues on mobile screens. */
  .car-details-wrapper article:nth-of-type(1),
  .car-details-wrapper article:nth-of-type(2),
  .car-details-wrapper article:nth-of-type(3) {
    min-height: 0;
  }

  /* Car gallery add to cart button container, center the content with auto margins. */
  .cart-btn-container {
    margin: 2rem auto;
    display: block;
  }

  .cart-btn-container a {
    margin-bottom: 2rem;
  }

}

/* Set the gallery carousel to position relative to allow more control of the child elements. */
#gallerySlider {
  position: relative;
}

/* Positioning the carousel indicators absolutely so they appear above the car gallery items. */
.carousel-indicators {
  position: absolute;
  top: -2rem;
  gap: 0.5rem;
  margin: 0;
  display: flex;
  height: 5%;
}

/* Carousel indicator opacity and active state styles. */
.carousel-indicators [data-bs-target] {
  opacity: 0.2;
}

.carousel-dark .carousel-indicators [data-bs-target].active {
  background-color: var(--light-slate-black);
  opacity: 1;
}

/* Add a transition to all carousel item h2 elements. */
.carousel-item:nth-of-type(1).active h2,
.carousel-item:nth-of-type(2).active h2,
.carousel-item:nth-of-type(3).active h2,
.carousel-item:nth-of-type(4).active h2,
.carousel-item:nth-of-type(5).active h2,
.carousel-item:nth-of-type(6).active h2,
.carousel-item:nth-of-type(7).active h2,
.carousel-item:nth-of-type(8).active h2,
.carousel-item:nth-of-type(9).active h2,
.carousel-item:nth-of-type(10).active h2,
.carousel-item:nth-of-type(11).active h2 {
  transition: var(--transition);
}

/* Setting the headings to their respective car colours when the specified carousel item is in the active state. */

.carousel-item:nth-of-type(1).active h2 {
  color: #ffa500;
}

.carousel-item:nth-of-type(2).active h2 {
  color: #6e6e6e;
}

.carousel-item:nth-of-type(3).active h2 {
  color: var(--primary-color);
}

.carousel-item:nth-of-type(4).active h2 {
  color: #5a0404;
}

.carousel-item:nth-of-type(5).active h2 {
  color: #e9a853;
}

.carousel-item:nth-of-type(6).active h2 {
  color: #52bfeb;
}

.carousel-item:nth-of-type(7).active h2 {
  color: #2039c4;
}

.carousel-item:nth-of-type(8).active h2 {
  color: #081c8f;
}

.carousel-item:nth-of-type(9).active h2 {
  color: #6dce1e;
}

.carousel-item:nth-of-type(10).active h2 {
  color: #8e159e;
}

.carousel-item:nth-of-type(11).active h2 {
  color: #4ba323;
}


/* Adjusting the add to card button box shadow to be the same colour as the car in the currently active carousel item. */

.carousel-item:nth-of-type(1).active .intro-wrapper a {
  box-shadow: 6px 6px 0 0 #ffa500;
}

.carousel-item:nth-of-type(2).active .intro-wrapper a {
  box-shadow: 6px 6px 0 0 #6e6e6e;
}

.carousel-item:nth-of-type(4).active .intro-wrapper a {
  box-shadow: 6px 6px 0 0 #5a0404;
}

.carousel-item:nth-of-type(5).active .intro-wrapper a {
  box-shadow: 6px 6px 0 0 #e9a853;
}

.carousel-item:nth-of-type(6).active .intro-wrapper a {
  box-shadow: 6px 6px 0 0 #52bfeb;
}

.carousel-item:nth-of-type(7).active .intro-wrapper a {
  box-shadow: 6px 6px 0 0 #2039c4;
}

.carousel-item:nth-of-type(8).active .intro-wrapper a {
  box-shadow: 6px 6px 0 0 #081c8f;
}

.carousel-item:nth-of-type(9).active .intro-wrapper a {
  box-shadow: 6px 6px 0 0 #6dce1e;
}

.carousel-item:nth-of-type(10).active .intro-wrapper a {
  box-shadow: 6px 6px 0 0 #8e159e;
}

.carousel-item:nth-of-type(11).active .intro-wrapper a {
  box-shadow: 6px 6px 0 0 #4ba323;
}

/* Combination selector for the add to cart button hover effect */
.carousel-item:nth-of-type(1).active .intro-wrapper a:hover,
.carousel-item:nth-of-type(2).active .intro-wrapper a:hover,
.carousel-item:nth-of-type(3).active .intro-wrapper a:hover,
.carousel-item:nth-of-type(4).active .intro-wrapper a:hover,
.carousel-item:nth-of-type(5).active .intro-wrapper a:hover,
.carousel-item:nth-of-type(6).active .intro-wrapper a:hover,
.carousel-item:nth-of-type(7).active .intro-wrapper a:hover,
.carousel-item:nth-of-type(8).active .intro-wrapper a:hover,
.carousel-item:nth-of-type(9).active .intro-wrapper a:hover,
.carousel-item:nth-of-type(10).active .intro-wrapper a:hover,
.carousel-item:nth-of-type(11).active .intro-wrapper a:hover {
  /* All buttons will contain the following stlyes on hover. */
  transform: translateY(0.2rem);
  color: var(--white);
  box-shadow: 6px 6px 0 0 var(--light-slate-black);
}

/* Setting the background colour of the add to cart button to the currently active car in the carousel on hover. */
.carousel-item:nth-of-type(1).active .intro-wrapper a:hover {
  background-color: orange;
}

.carousel-item:nth-of-type(2).active .intro-wrapper a:hover {
  background-color: #6e6e6e;
}

.carousel-item:nth-of-type(3).active .intro-wrapper a:hover {
  background-color: var(--primary-color);
}

.carousel-item:nth-of-type(4).active .intro-wrapper a:hover {
  background-color: #5a0404;
}

.carousel-item:nth-of-type(5).active .intro-wrapper a:hover {
  background-color: #e9a853;
}

.carousel-item:nth-of-type(6).active .intro-wrapper a:hover {
  background-color: #52bfeb;
}

.carousel-item:nth-of-type(7).active .intro-wrapper a:hover {
  background-color: #2039c4;
}

.carousel-item:nth-of-type(8).active .intro-wrapper a:hover {
  background-color: #081c8f;
}

.carousel-item:nth-of-type(9).active .intro-wrapper a:hover {
  background-color: #6dce1e;
}

.carousel-item:nth-of-type(10).active .intro-wrapper a:hover {
  background-color: #8e159e;
}

.carousel-item:nth-of-type(11).active .intro-wrapper a:hover {
  background-color: #4ba323;
}

/* Setting the SVG stroke colour of the car details depending on what car is active in the carousel. */
.carousel-item:nth-of-type(1).active .car-details-wrapper svg {
  stroke: orange;
}

.carousel-item:nth-of-type(2).active .car-details-wrapper svg {
  stroke: #6e6e6e;
}

.carousel-item:nth-of-type(4).active .car-details-wrapper svg {
  stroke: #5a0404;
}

.carousel-item:nth-of-type(5).active .car-details-wrapper svg {
  stroke: #c08537;
}

.carousel-item:nth-of-type(6).active .car-details-wrapper svg {
  stroke: #52bfeb;
}

.carousel-item:nth-of-type(7).active .car-details-wrapper svg {
  stroke: #2039c4;
}

.carousel-item:nth-of-type(8).active .car-details-wrapper svg {
  stroke: #081c8f;
}

.carousel-item:nth-of-type(9).active .car-details-wrapper svg {
  stroke: #6dce1e;
}

.carousel-item:nth-of-type(10).active .car-details-wrapper svg {
  stroke: #8e159e;
}

.carousel-item:nth-of-type(11).active .car-details-wrapper svg {
  stroke: #4ba323;
}

/* Contact container styles. */
#contact {
  min-height: 100vh;
  margin: 0 auto;
  max-width: 1400px;
  /* Display grid and center content */
  display: grid;
  justify-content: center;
  align-items: center;
  /* Container white space. */
  padding: 20rem 1rem 0 1rem;
}

/* At screen widths of 768px, apply the following styles. */
@media screen and (max-width: 768px) {

  /* Reduce container white space on mobile devices. */
  #gallery,
  #contact {
    padding: 13rem 1rem 0 1rem;
  }
  
}

/* Contact section heading styles. */
#contact h1 {
  /* Dynamically adjust the heading font size depending on the width of the viewport. */
  font-size: clamp(var(--font-xxlg), 5vw, 4rem);
  text-transform: uppercase;
  font-weight: 700;
}

/* Top and bottom white space of the contact form. */
#contact-form {
  margin: 2rem 0;
}

/* Form wrapper container max width. */
.form-wrapper {
  max-width: 1200px;
}

/* Form wrapper text styles. */
.form-wrapper h1,
.form-wrapper p {
  text-align: center;
}

.form-wrapper p {
  margin: 1rem auto;
  max-width: 750px;
}

/* Overwriting bootstrap form styles of the form-control class. */
.form-control {
  display: block;
  width: 100%;
  padding: 0.5rem 0.75rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  color: var(--light-slate-black);
  /* Form field background colours */
  background-color: #ffffff;
  background-clip: padding-box;
  border-radius: 0.25rem;
  /* Remove border and outline styles from the form inputs. */
  border: none;
  outline: none;
  /* Text letter spacing. */
  letter-spacing: 0.05rem;
  /* Adjust the boldness of the form field text content. */
  font-weight: 500;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 5px;
  border: 2px solid var(--light-slate-black);
}
  
/* Form placeholder text colour */
.form-control::-webkit-input-placeholder, 
.form-control:focus::-webkit-input-placeholder {
  color: var(--light-slate-black);
}

/* When a form field is focused, apply the following styles. */
.form-control:focus {
  color: var(--primary-color);
  border-color: var(--primary-color);
  /* Remove default bootstrap outline. */
  outline: 0;
  transition: var(--transition);
  box-shadow: 0 0 0 0.15rem rgba(201, 28, 15, 0.8);
}

/* Add top and bottom padding to the input rows. */
.row {
  padding: 1rem 0;
}

/* Center the contact button in the form wrapper container. */
#contact button {
  display: flex;
  justify-content: center;
  margin: 2rem auto 0 auto;
  border-radius: 0;
}

/* Add max device width of 768px, apply the following styles. */
@media screen and (max-width: 768px) {

  /* Add some padding around the form wrapper on mobile screens */
  .form-wrapper {
    padding: 0 1rem;
  }
  
}

/* Faq container styles. */
#faq {
  /* Min height of the container. */
  min-height: 80vh;
  /* Set a max width and center the container contents. */
  margin: 0 auto;
  max-width: 1200px;
  padding: 10rem 1rem;
}

/* Add padding to the accordion item buttons */
.accordion-button.collapsed {
  padding: 0.5rem;
}

/* Add a fixed max-width to the support page accordion. */
#support-accordion {
  max-width: 1000px;
  margin: 3rem auto;
}

/* Author accordion heading styles. */
#faq h2 {
  color: var(--primary-color);
  /* Dynamically adjust the heading font depending on the viewport width. */
  font-size: clamp(var(--font-xxlg), 5vw, 4rem);
}

/* Faq text styles. */
#faq h2, #faq p {
  text-align: center;
}

#faq p {
  margin: 1rem 0;
}

#faq > p:nth-of-type(1) {
  font-weight: 600;
}

/* Accordion item styles. */
.accordion-flush .accordion-item {
  border: none;
  transition: 0.2s ease-in-out;
  max-width: 1000px;
  /* Top and bottom spacing between the accordion items. */
  margin: 1rem auto;
}

/* Adjust the accordion button heading font depending on the viewport width using the clamp function. */
.accordion-flush .accordion-item .accordion-button, 
.accordion-flush .accordion-item .accordion-button.collapsed {
  padding: 1rem;
  font-size: clamp(var(--font-xxs), 5vw, var(--font-xs));
}

/* Accordion body colour and white space. */
.accordion-body {
  color: var(--light-slate-black);
  padding: 1.25rem 0.5rem;
}

.accordion-body p {
  text-align: left;
  padding: 0 1rem;
}

/* Add a transition to the accordion button to allow a smooth transition on hover later. */
.accordion-button {
  transition: var(--transition);
}

/* If the accordion button doesn't have the .collapsed class, apply these properties. */
.accordion-button:not(.collapsed) {
  color: var(--primary-color);
  background-color: transparent;
  border: none;
  box-shadow: none;
  text-align: center;
}

/* Each accordion article will contain no border */
.accordion article {
  border: none;
}

/* When an item is focused, remove the border colour, box-shadowm and outline styles. */
.accordion-button:focus {
  border-color: none;
  box-shadow: none;
  outline: 0;
}

/* Background colour hover effect to signal the accordion items are clickable */
.accordion-item:hover .accordion-button {
  background-color: var(--testimonial-light-grey);
}

/* On accordion item hover, the button heading will change to the primary red from the root styles, signifying the item is clickable. */
.accordion-item:hover .accordion-button {
  color: var(--primary-color);
}

/* Display the prev and next carousel buttons on full desktop views. */
.carousel-control-prev,
.carousel-control-next {
  top: -35rem;
  width: 5%;
}

.carousel-control-next {
  right: -7rem;
}

.carousel-control-prev {
  left: -7rem;
}

/* Remove the next and prev buttons when on screens smaller than native 1920px to prevent overflow. */

@media screen and (max-width: 1900px) {
  .carousel-control-prev,
  .carousel-control-next {
    display: none;
  }
}